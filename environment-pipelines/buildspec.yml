version: 0.2

env:
  parameter-store:
    SLACK_CHANNEL_ID: /codebuild/slack_pipeline_notifications_test_oauth_channel
    SLACK_TOKEN: /codebuild/slack_oauth_token
  variables:
    TERRAFORM_VERSION: 1.8.1
  exported-variables:
    - SLACK_REF

phases:
  install:
    commands:
      - echo "Deploying ${APPLICATION} environments"
      - pip install -r requirements.txt
      - export SLACK_REF=$(python ./platform_notify.py post_environment_progress)
      - python ./platform_notify.py post_job_comment --slack-ref $SLACK_REF --title "Install" --message "Starting install phase"
      - VERSION_OUTPUT=""
      - |
        if [ ! -f .copilot-version ]; then
          echo "Cannot find .copilot-version file"
          exit 1
        fi
      - |
        if [ ! -f .platform-helper-version ]; then
          echo "Cannot find .platform-helper-version file"
          exit 1
        fi
      - COPILOT_VERSION=`cat .copilot-version`
      - PLATFORM_HELPER_VERSION=`cat .platform-helper-version`
      - echo "Installing build tools"
      - yum -y install python-pip
      - mkdir ./build-tools
      - cd ./build-tools
      - curl -s -qL -o terraform_install.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip terraform_install.zip
      - chmod +x terraform
      - rm terraform_install.zip
      - curl -s -qL -o copilot https://ecs-cli-v2-release.s3.amazonaws.com/copilot-linux-v${COPILOT_VERSION}
      - chmod +x copilot
      - pip install --quiet --target . dbt-platform-helper==$PLATFORM_HELPER_VERSION
      - mv bin/platform-helper .
      - VERSION_OUTPUT+="\n$(./terraform --version)"
      - VERSION_OUTPUT+="\n$(./platform-helper --version)"
      - VERSION_OUTPUT+="\n$(./copilot --version)"
      - VERSION_OUTPUT+="\n$(python3 --version)"
      - VERSION_OUTPUT+="\n$(pip --version)"
      - echo -e "=============\nTool Versions\n-------------\n$VERSION_OUTPUT"
      - python ../platform_notify.py post_job_comment --slack-ref $SLACK_REF --title "Install" --message "Install phase complete"
artifacts:
  files:
    - "**/*"
