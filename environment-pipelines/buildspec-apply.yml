version: 0.2

env:
  parameter-store:
    SLACK_TOKEN: /codebuild/slack_oauth_token

phases:
  install:
    commands:
      - export PATH="${CODEBUILD_SRC_DIR}/build-tools/bin:$PATH"
      - export PYTHONPATH="${CODEBUILD_SRC_DIR}/build-tools"
  build:
    commands:
      - set -e
      - echo -e "\nTerraform Apply Phase"
      - platform-helper notify add-comment "${SLACK_CHANNEL_ID}" "${SLACK_TOKEN}" "${SLACK_REF}" "Starting terraform apply phase for the ${ENVIRONMENT} environment."
      - echo -e "\nWorking on environment ${ENVIRONMENT}"
      - cd "terraform/environments/${ENVIRONMENT}"
      - terraform apply plan.tfplan
      - |
          if [[ "${COPILOT_PROFILE}" != *"prod"* ]]; then
            echo -e "\nGenerating manifests and deploying AWS Copilot environment resources"
            cd "${CODEBUILD_SRC_DIR}"
            platform-helper environment generate --name "${ENVIRONMENT}"
            copilot env init --name "${ENVIRONMENT}" --profile "${COPILOT_PROFILE}" --default-config
            platform-helper copilot make-addons
            copilot env deploy --name "${ENVIRONMENT}"
          fi
  post_build:
    commands:
      - |
        if [ "${CODEBUILD_BUILD_SUCCEEDING}" == "1" ]
        then
          MESSAGE="Terraform apply phase complete for the ${ENVIRONMENT} environment."
          ADDITIONAL_OPTIONS=""
        else
          MESSAGE=":alert: Terraform apply phase FAILED for the ${ENVIRONMENT} environment."
          ADDITIONAL_OPTIONS="--send-to-main-channel true"
        fi
      - platform-helper notify add-comment "${SLACK_CHANNEL_ID}" "${SLACK_TOKEN}" "${SLACK_REF}" "${MESSAGE}" ${ADDITIONAL_OPTIONS}
artifacts:
  files:
    - "**/*"
